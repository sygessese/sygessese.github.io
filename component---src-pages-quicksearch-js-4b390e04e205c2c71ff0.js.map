{"version":3,"sources":["webpack:///./src/components/quickfind.js","webpack:///./src/components/quicksearch.js","webpack:///./src/pages/quicksearch.js"],"names":["quickfind","n","this","array","initializeArray","sizeArray","initializeSizeArray","i","push","root","r","connected","a","b","union","aRoot","bRoot","module","exports","search","QF","Box","styled","div","props","color","newBoard","result","random","Math","floor","boardConstruct","percolate","forEach","box","index","quicksearch","Section","console","log","onClick","Container","Header","title"],"mappings":"kFAAMA,E,wBACJ,WAAYC,GACVC,KAAKC,MAAQD,KAAKE,gBAAgBH,GAClCC,KAAKG,UAAYH,KAAKI,oBAAoBL,G,2BAG5CG,gBAAA,SAAgBH,GAEd,IADA,IAAIE,EAAQ,GACHI,EAAI,EAAGA,EAAIN,EAAGM,IACrBJ,EAAMK,KAAKD,GAEb,OAAOJ,G,EAGTG,oBAAA,SAAoBL,GAElB,IADA,IAAIE,EAAQ,GACHI,EAAI,EAAGA,EAAIN,EAAGM,IACrBJ,EAAMK,KAAK,GAEb,OAAOL,G,EAGTM,KAAA,SAAKC,GACH,KAAOR,KAAKC,MAAMO,IAAMA,GACtBR,KAAKC,MAAMO,GAAKR,KAAKC,MAAMD,KAAKC,MAAMO,IACtCA,EAAIR,KAAKC,MAAMO,GAEjB,OAAOA,G,EAGTC,UAAA,SAAUC,EAAGC,GACX,OAAOX,KAAKO,KAAKG,IAAMV,KAAKO,KAAKI,I,EAGnCC,MAAA,SAAMF,EAAGC,GACP,IAAIE,EAAQb,KAAKO,KAAKG,GAClBI,EAAQd,KAAKO,KAAKI,GAClBE,IAAUC,IACRd,KAAKG,UAAUW,GAASd,KAAKG,UAAUU,IACzCb,KAAKC,MAAMY,GAASC,EACpBd,KAAKG,UAAUW,IAAUd,KAAKG,UAAUU,KAExCb,KAAKC,MAAMa,GAASD,EACpBb,KAAKG,UAAUU,IAAUb,KAAKG,UAAUW,M,KAMhDC,EAAOC,QAAUlB,G,kHC7CXmB,EAAS,I,OAAIC,GAAG,KAElBC,EAAMC,IAAOC,IAAV,mEAAGD,CAAH,+FAKe,SAAAE,GAAK,OAAIA,EAAMC,SAWjCC,EATmB,SAASzB,GAE9B,IADA,IAAI0B,EAAS,GACJpB,EAAI,EAAGA,EAAIN,EAAGM,IAAK,CAC1B,IAAIqB,EAASC,KAAKC,MAAMD,KAAKD,SAAWC,KAAKC,MAAM,KACnDH,EAAOnB,KAAK,kBAACa,EAAD,CAAKI,MAAOG,EAAS,EAAI,QAAU,WAEjD,OAAOD,EAGMI,CAAe,KAExBC,EAAY,WAChBN,EAASO,SAAQ,SAACC,EAAKC,GACG,UAApBD,EAAIV,MAAMC,QACRU,EAAQ,IAAO,GAAyC,UAApCT,EAASS,EAAQ,GAAGX,MAAMC,OAChDN,EAAOL,MAAMqB,EAAOA,EAAQ,GAE1BA,EAAQ,GAA0C,UAArCT,EAASS,EAAQ,IAAIX,MAAMC,OAC1CN,EAAOL,MAAMqB,EAAOA,EAAQ,QAIlCT,EAASO,SAAQ,SAACC,EAAKC,GACjBhB,EAAOV,KAAK0B,GAAS,KACvBD,EAAIV,MAAMC,MAAQ,YA2BTW,EAtBK,WAClB,IAAMC,EAAUf,IAAOC,IAAV,uEAAGD,CAAH,mJAab,OADAgB,QAAQC,IAAIb,EAAS,KAEnB,kBAACW,EAAD,KACGX,EACD,4BAAQc,QAASR,GAAjB,eCpDAS,EAAYnB,IAAOC,IAAV,6EAAGD,CAAH,4OAgBToB,EAASpB,IAAOC,IAAV,0EAAGD,CAAH,yEAiBGc,UAVK,kBAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKO,MAAM,iBACX,kBAACF,EAAD,KACE,kBAACC,EAAD,qBACA,kBAAC,EAAD","file":"component---src-pages-quicksearch-js-4b390e04e205c2c71ff0.js","sourcesContent":["class quickfind {\n  constructor(n) {\n    this.array = this.initializeArray(n)\n    this.sizeArray = this.initializeSizeArray(n)\n  }\n\n  initializeArray(n) {\n    var array = []\n    for (var i = 0; i < n; i++) {\n      array.push(i)\n    }\n    return array\n  }\n\n  initializeSizeArray(n) {\n    var array = []\n    for (var i = 0; i < n; i++) {\n      array.push(1)\n    }\n    return array\n  }\n\n  root(r) {\n    while (this.array[r] != r) {\n      this.array[r] = this.array[this.array[r]]\n      r = this.array[r]\n    }\n    return r\n  }\n\n  connected(a, b) {\n    return this.root(a) == this.root(b)\n  }\n\n  union(a, b) {\n    var aRoot = this.root(a)\n    var bRoot = this.root(b)\n    if (aRoot !== bRoot) {\n      if (this.sizeArray[bRoot] > this.sizeArray[aRoot]) {\n        this.array[aRoot] = bRoot\n        this.sizeArray[bRoot] += this.sizeArray[aRoot]\n      } else {\n        this.array[bRoot] = aRoot\n        this.sizeArray[aRoot] += this.sizeArray[bRoot]\n      }\n    }\n  }\n}\n\nmodule.exports = quickfind\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport QF from \"../components/quickfind\"\n\nconst search = new QF(100)\n\nvar Box = styled.div`\n  height: 50px;\n  width: 50px;\n  box-sizing: border-box;\n  border: 1px solid black;\n  background-color: ${props => props.color};\n`\nconst boardConstruct = function(n) {\n  var result = []\n  for (var i = 0; i < n; i++) {\n    var random = Math.floor(Math.random() * Math.floor(10))\n    result.push(<Box color={random < 6 ? \"white\" : \"black\"} />)\n  }\n  return result\n}\n\nvar newBoard = boardConstruct(100)\n\nconst percolate = function() {\n  newBoard.forEach((box, index) => {\n    if (box.props.color === \"white\") {\n      if (index % 10 !== 0 && newBoard[index - 1].props.color !== \"black\") {\n        search.union(index, index - 1)\n      }\n      if (index > 9 && newBoard[index - 10].props.color !== \"black\") {\n        search.union(index, index - 10)\n      }\n    }\n  })\n  newBoard.forEach((box, index) => {\n    if (search.root(index) < 10) {\n      box.props.color = \"blue\"\n    }\n  })\n}\n\nconst quicksearch = () => {\n  const Section = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    height: 500px;\n    width: 500px;\n    margin: auto;\n    padding-top: 10px;\n    @media (max-width: 820px) {\n      margin-left: 1em;\n      margin-right: 1em;\n    }\n  `\n  console.log(newBoard[55])\n  return (\n    <Section>\n      {newBoard}\n      <button onClick={percolate}>percolate</button>\n    </Section>\n  )\n}\n\nexport default quicksearch\n","import React from \"react\"\n\nimport styled from \"styled-components\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport QS from \"../components/quicksearch\"\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-family: times new roman;\n  padding-left: 25em;\n  padding-right: 5em;\n  font-size: 0.95em;\n  margin-bottom: 3em;\n\n  @media (max-width: 820px) {\n    padding-left: 0px;\n    padding-top: 10em;\n    margin-bottom: 2em;\n    padding-right: 0px;\n  }\n`\nconst Header = styled.div`\n  display: flex;\n  justify-content: center;\n  font-size: 1.9em;\n  margin-top: 3em;\n`\n\nconst quicksearch = () => (\n  <Layout>\n    <SEO title=\"Quick Search\" />\n    <Container>\n      <Header>Quick Search</Header>\n      <QS />\n    </Container>\n  </Layout>\n)\n\nexport default quicksearch\n"],"sourceRoot":""}