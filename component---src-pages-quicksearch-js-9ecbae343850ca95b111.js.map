{"version":3,"sources":["webpack:///./src/components/quickfind.js","webpack:///./src/components/quicksearch.js","webpack:///./src/pages/quicksearch.js"],"names":["quickfind","n","this","array","initializeArray","i","push","root","r","connected","a","b","union","aRoot","bRoot","module","exports","search","QF","Box","styled","div","props","color","boardConstruct","result","random","Math","floor","quicksearch","percolate","newBoard","map","box","index","setTimeout","forceUpdate","state","render","Section","onClick","bind","React","Component","Container","Header","title"],"mappings":"kFAAMA,E,wBACJ,WAAYC,GACVC,KAAKC,MAAQD,KAAKE,gBAAgBH,G,2BAGpCG,gBAAA,SAAgBH,GAEd,IADA,IAAIE,EAAQ,GACHE,EAAI,EAAGA,EAAIJ,EAAGI,IACrBF,EAAMG,KAAKD,GAEb,OAAOF,G,EAGTI,KAAA,SAAKC,GACH,KAAON,KAAKC,MAAMK,IAAMA,GACtBN,KAAKC,MAAMK,GAAKN,KAAKC,MAAMD,KAAKC,MAAMK,IACtCA,EAAIN,KAAKC,MAAMK,GAEjB,OAAOA,G,EAGTC,UAAA,SAAUC,EAAGC,GACX,OAAOT,KAAKK,KAAKG,IAAMR,KAAKK,KAAKI,I,EAGnCC,MAAA,SAAMF,EAAGC,GACP,IAAIE,EAAQX,KAAKK,KAAKG,GAClBI,EAAQZ,KAAKK,KAAKI,GAClBE,IAAUC,IACRA,GAASD,EACXX,KAAKC,MAAMU,GAASC,EAEpBZ,KAAKC,MAAMW,GAASD,I,KAM5BE,EAAOC,QAAUhB,G,kHClCjB,IAAMiB,EAAS,I,OAAIC,GAAG,KAElBC,EAAMC,IAAOC,IAAV,mEAAGD,CAAH,+FAKe,SAAAE,GAAK,OAAIA,EAAMC,SAE/BC,EAAiB,SAASvB,GAE9B,IADA,IAAIwB,EAAS,GACJpB,EAAI,EAAGA,EAAIJ,EAAGI,IAAK,CAC1B,IAAIqB,EAASC,KAAKC,MAAMD,KAAKD,SAAWC,KAAKC,MAAM,KACnDH,EAAOnB,KAAK,kBAACa,EAAD,CAAKI,MAAOG,EAAS,EAAI,QAAU,WAEjD,OAAOD,GAuDMI,E,oBAnDb,WAAYP,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAMFQ,UAAY,WAAY,IAAD,OACrBC,SAASC,KAAI,SAACC,EAAKC,GACO,UAApBD,EAAIX,MAAMC,QACRW,EAAQ,IAAO,GAAyC,UAApCH,SAASG,EAAQ,GAAGZ,MAAMC,OAChDN,EAAOL,MAAMsB,EAAOA,EAAQ,GAE1BA,EAAQ,GAA0C,UAArCH,SAASG,EAAQ,IAAIZ,MAAMC,OAC1CN,EAAOL,MAAMsB,EAAOA,EAAQ,QAIlCH,SAASC,KAAI,SAACC,EAAKC,GACbjB,EAAOV,KAAK2B,GAAS,KACvBD,EAAIX,MAAMC,MAAQ,WAGtBY,YAAW,WACT,EAAKC,gBACJ,MAvBH,EAAKC,MAAQ,CACXN,SAAUP,EAAe,MAHV,E,0GA4BnBc,OAAA,WACE,IAAMC,EAAUnB,IAAOC,IAAV,uEAAGD,CAAH,mJAab,OACE,kBAACmB,EAAD,KACGR,SACD,4BAAQS,QAAStC,KAAK4B,UAAUW,KAAKvC,OAArC,e,GA9CkBwC,IAAMC,WCf1BC,EAAYxB,IAAOC,IAAV,6EAAGD,CAAH,4OAgBTyB,EAASzB,IAAOC,IAAV,0EAAGD,CAAH,yEAiBGS,UAVK,kBAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKiB,MAAM,iBACX,kBAACF,EAAD,KACE,kBAACC,EAAD,qBACA,kBAAC,EAAD","file":"component---src-pages-quicksearch-js-9ecbae343850ca95b111.js","sourcesContent":["class quickfind {\n  constructor(n) {\n    this.array = this.initializeArray(n)\n  }\n\n  initializeArray(n) {\n    var array = []\n    for (var i = 0; i < n; i++) {\n      array.push(i)\n    }\n    return array\n  }\n\n  root(r) {\n    while (this.array[r] != r) {\n      this.array[r] = this.array[this.array[r]]\n      r = this.array[r]\n    }\n    return r\n  }\n\n  connected(a, b) {\n    return this.root(a) == this.root(b)\n  }\n\n  union(a, b) {\n    var aRoot = this.root(a)\n    var bRoot = this.root(b)\n    if (aRoot !== bRoot) {\n      if (bRoot <= aRoot) {\n        this.array[aRoot] = bRoot\n      } else {\n        this.array[bRoot] = aRoot\n      }\n    }\n  }\n}\n\nmodule.exports = quickfind\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport QF from \"../components/quickfind\"\n\nconst search = new QF(100)\n\nvar Box = styled.div`\n  height: 40px;\n  width: 40px;\n  box-sizing: border-box;\n  border: 1px solid black;\n  background-color: ${props => props.color};\n`\nconst boardConstruct = function(n) {\n  var result = []\n  for (var i = 0; i < n; i++) {\n    var random = Math.floor(Math.random() * Math.floor(10))\n    result.push(<Box color={random < 6 ? \"white\" : \"black\"} />)\n  }\n  return result\n}\n\nclass quicksearch extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      newBoard: boardConstruct(100),\n    }\n  }\n\n  percolate = function() {\n    newBoard.map((box, index) => {\n      if (box.props.color === \"white\") {\n        if (index % 10 !== 0 && newBoard[index - 1].props.color !== \"black\") {\n          search.union(index, index - 1)\n        }\n        if (index > 9 && newBoard[index - 10].props.color !== \"black\") {\n          search.union(index, index - 10)\n        }\n      }\n    })\n    newBoard.map((box, index) => {\n      if (search.root(index) < 10) {\n        box.props.color = \"blue\"\n      }\n    })\n    setTimeout(() => {\n      this.forceUpdate()\n    }, 500)\n  }\n\n  render() {\n    const Section = styled.div`\n      display: flex;\n      flex-wrap: wrap;\n      height: 400px;\n      width: 400px;\n      margin: auto;\n      padding-top: 10px;\n      @media (max-width: 820px) {\n        margin-left: 1em;\n        margin-right: 1em;\n      }\n    `\n\n    return (\n      <Section>\n        {newBoard}\n        <button onClick={this.percolate.bind(this)}>percolate</button>\n      </Section>\n    )\n  }\n}\n\nexport default quicksearch\n","import React from \"react\"\n\nimport styled from \"styled-components\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport QS from \"../components/quicksearch\"\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-family: times new roman;\n  padding-left: 25em;\n  padding-right: 5em;\n  font-size: 0.95em;\n  margin-bottom: 3em;\n\n  @media (max-width: 820px) {\n    padding-left: 0px;\n    padding-top: 10em;\n    margin-bottom: 2em;\n    padding-right: 0px;\n  }\n`\nconst Header = styled.div`\n  display: flex;\n  justify-content: center;\n  font-size: 1.9em;\n  margin-top: 3em;\n`\n\nconst quicksearch = () => (\n  <Layout>\n    <SEO title=\"Quick Search\" />\n    <Container>\n      <Header>Quick Search</Header>\n      <QS />\n    </Container>\n  </Layout>\n)\n\nexport default quicksearch\n"],"sourceRoot":""}