{"version":3,"sources":["webpack:///./src/components/quickfind.js","webpack:///./src/components/quicksearch.js","webpack:///./src/pages/quicksearch.js"],"names":["quickfind","n","this","array","initializeArray","i","push","root","r","connected","a","b","union","aRoot","bRoot","module","exports","search","QF","Box","styled","div","props","graphSize","color","boardConstruct","result","m","random","Math","floor","newBoard","quicksearch","percolate","forEach","box","index","setTimeout","setState","count","state","bind","reset","console","log","handleChange","e","target","value","render","Section","ButtonRow","size","onClick","for","id","onChange","React","Component","Container","Header","title"],"mappings":"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","file":"component---src-pages-quicksearch-js-360dfd537f5a2b5cd9b0.js","sourcesContent":["class quickfind {\n  constructor(n) {\n    this.array = this.initializeArray(n)\n  }\n\n  initializeArray(n) {\n    var array = []\n    for (var i = 0; i < n; i++) {\n      array.push(i)\n    }\n    return array\n  }\n\n  root(r) {\n    while (this.array[r] != r) {\n      this.array[r] = this.array[this.array[r]]\n      r = this.array[r]\n    }\n    return r\n  }\n\n  connected(a, b) {\n    return this.root(a) == this.root(b)\n  }\n\n  union(a, b) {\n    var aRoot = this.root(a)\n    var bRoot = this.root(b)\n    if (aRoot !== bRoot) {\n      if (bRoot <= aRoot) {\n        this.array[aRoot] = bRoot\n      } else {\n        this.array[bRoot] = aRoot\n      }\n    }\n  }\n}\n\nmodule.exports = quickfind\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport QF from \"../components/quickfind\"\n\nvar search = new QF(400)\n\nvar Box = styled.div`\n  height: ${props => props.graphSize + \"px\"};\n  width: ${props => props.graphSize + \"px\"};\n  box-sizing: border-box;\n  border: 1px solid black;\n  background-color: ${props => props.color};\n  @media (max-width: 820px) {\n    height: ${props => props.graphSize / 2 + \"px\"};\n    width: ${props => props.graphSize / 2 + \"px\"};\n  }\n`\nconst boardConstruct = function(n) {\n  var result = []\n  var m = n * n\n  for (var i = 0; i < m; i++) {\n    var random = Math.floor(Math.random() * Math.floor(10))\n    result.push(<Box color={random < 6 ? \"white\" : \"black\"} graphSize={n} />)\n  }\n  return result\n}\n\nvar newBoard = boardConstruct(20)\n\nclass quicksearch extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      count: 0,\n      graphSize: 20,\n    }\n  }\n\n  percolate = function() {\n    newBoard.forEach((box, index) => {\n      if (box.props.color === \"white\") {\n        if (index % 20 !== 0 && newBoard[index - 1].props.color !== \"black\") {\n          search.union(index, index - 1)\n        }\n        if (index > 19 && newBoard[index - 20].props.color !== \"black\") {\n          search.union(index, index - 20)\n        }\n      }\n    })\n    newBoard.forEach((box, index) => {\n      if (search.root(index) < 20) {\n        box.props.color = \"blue\"\n      }\n    })\n    setTimeout(\n      function() {\n        this.setState({ count: this.state.count + 1 })\n      }.bind(this),\n      400\n    )\n  }\n\n  reset() {\n    console.log(this.state.graphSize)\n    newBoard = boardConstruct(this.state.graphSize)\n    search = new QF(this.state.graphSize * this.state.graphSize)\n    this.setState({ count: this.state.count + 1 })\n  }\n\n  handleChange(e) {\n    this.setState({ graphSize: e.target.value })\n  }\n\n  render() {\n    const Section = styled.div`\n      display: flex;\n      flex-wrap: wrap;\n      height: ${props => props.graphSize * props.graphSize + \"px\"};\n      width: ${props => props.graphSize * props.graphSize + \"px\"};\n      margin: auto;\n      padding-top: 10px;\n      @media (max-width: 820px) {\n        height: ${props => (props.graphSize * props.graphSize) / 2 + \"px\"};\n        width: ${props => (props.graphSize * props.graphSize) / 2 + \"px\"};\n      }\n    `\n\n    const ButtonRow = styled.div`\n      display: flex;\n      width: 100%;\n      justify-content: space-between;\n    `\n\n    return (\n      <Section size={this.state.graphSize}>\n        {newBoard}\n        <ButtonRow>\n          <button onClick={this.percolate.bind(this)}>percolate</button>\n          <label for=\"rowsize\">Graph size:</label>\n\n          <select id=\"size\" onChange={this.handleChange()}>\n            <option value={10}>10</option>\n            <option value={20}>20</option>\n            <option value={30}>30</option>\n            <option value={40}>40</option>\n          </select>\n          <button onClick={this.reset.bind(this)}>reset</button>\n        </ButtonRow>\n      </Section>\n    )\n  }\n}\n\nexport default quicksearch\n","import React from \"react\"\n\nimport styled from \"styled-components\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport QS from \"../components/quicksearch\"\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-family: times new roman;\n  padding-left: 25em;\n  padding-right: 5em;\n  font-size: 0.95em;\n  margin-bottom: 3em;\n\n  @media (max-width: 820px) {\n    padding-left: 0px;\n    padding-top: 10em;\n    margin-bottom: 2em;\n    padding-right: 0px;\n  }\n`\nconst Header = styled.div`\n  display: flex;\n  justify-content: center;\n  font-size: 1.9em;\n  margin-top: 3em;\n`\n\nconst quicksearch = () => (\n  <Layout>\n    <SEO title=\"Quick Union\" />\n    <Container>\n      <Header>Quick Union</Header>\n      <QS />\n    </Container>\n  </Layout>\n)\n\nexport default quicksearch\n"],"sourceRoot":""}